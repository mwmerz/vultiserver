{
    "swagger": "2.0",
    "info": {
        "description": "Vultisig server API for vault management and cryptographic operations",
        "title": "Vultiserver API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/getDerivedPublicKey": {
            "get": {
                "description": "Get the derived public key from base public key and derivation path",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "Get derived public key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base public key",
                        "name": "publicKey",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hex encoded chain code",
                        "name": "hexChainCode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Derivation path",
                        "name": "derivePath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Use EdDSA key (default: false)",
                        "name": "isEdDSA",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Derived public key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Check if the server is running",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Vultiserver is running",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vault/create": {
            "post": {
                "description": "Create a new vault with the specified parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vault"
                ],
                "summary": "Create a new vault",
                "parameters": [
                    {
                        "description": "Vault creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.VaultCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vault/exist/{publicKeyECDSA}": {
            "get": {
                "description": "Check if a vault exists by public key ECDSA",
                "tags": [
                    "vault"
                ],
                "summary": "Check if vault exists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public key ECDSA (66 characters hex)",
                        "name": "publicKeyECDSA",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/vault/get/{publicKeyECDSA}": {
            "get": {
                "security": [
                    {
                        "XPassword": []
                    }
                ],
                "description": "Get vault data by public key ECDSA",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vault"
                ],
                "summary": "Get vault data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public key ECDSA (66 characters hex)",
                        "name": "publicKeyECDSA",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vault password (base64 encoded)",
                        "name": "x-password",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.VaultGetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vault/migrate": {
            "post": {
                "description": "Migrate an existing vault from GG20 library to DKLS library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vault"
                ],
                "summary": "Migrate a vault from GG20 to DKLS",
                "parameters": [
                    {
                        "description": "Migration request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.MigrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vault/resend": {
            "post": {
                "description": "Request server to send vault share and code through email again",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vault"
                ],
                "summary": "Resend vault email",
                "parameters": [
                    {
                        "description": "Resend request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.VaultResendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                }
            }
        },
        "/vault/reshare": {
            "post": {
                "description": "Reshare an existing vault with new or existing parties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vault"
                ],
                "summary": "Reshare a vault",
                "parameters": [
                    {
                        "description": "Reshare request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.ReshareRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vault/sign": {
            "post": {
                "description": "Sign messages using the vault's key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vault"
                ],
                "summary": "Sign messages",
                "parameters": [
                    {
                        "description": "Keysign request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.KeysignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vault/verify/{publicKeyECDSA}/{code}": {
            "get": {
                "description": "Verify the code sent via email",
                "tags": [
                    "vault"
                ],
                "summary": "Verify code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public key ECDSA (66 characters hex)",
                        "name": "publicKeyECDSA",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verification code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_vultisig_vultiserver_internal_types.KeysignRequest": {
            "type": "object",
            "properties": {
                "derive_path": {
                    "description": "Derive Path",
                    "type": "string"
                },
                "hex_encryption_key": {
                    "description": "Hex encryption key, used to encrypt the keysign messages",
                    "type": "string"
                },
                "is_ecdsa": {
                    "description": "indicate use ECDSA or EDDSA key to sign the messages",
                    "type": "boolean"
                },
                "messages": {
                    "description": "Messages need to be signed",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "public_key": {
                    "description": "public key, used to identify the backup file",
                    "type": "string"
                },
                "session": {
                    "description": "Session ID , it should be an UUID",
                    "type": "string"
                },
                "vault_password": {
                    "description": "password used to decrypt the vault file",
                    "type": "string"
                }
            }
        },
        "github_com_vultisig_vultiserver_internal_types.LibType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "GG20",
                "DKLS"
            ]
        },
        "github_com_vultisig_vultiserver_internal_types.MigrationRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "encryption_password": {
                    "description": "password used to encrypt the vault file",
                    "type": "string"
                },
                "hex_encryption_key": {
                    "description": "hex encryption key",
                    "type": "string"
                },
                "public_key": {
                    "description": "public key ecdsa",
                    "type": "string"
                },
                "session_id": {
                    "description": "session id",
                    "type": "string"
                }
            }
        },
        "github_com_vultisig_vultiserver_internal_types.ReshareRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "encryption_password": {
                    "description": "password used to encrypt the vault file",
                    "type": "string"
                },
                "hex_chain_code": {
                    "description": "hex chain code",
                    "type": "string"
                },
                "hex_encryption_key": {
                    "description": "hex encryption key",
                    "type": "string"
                },
                "lib_type": {
                    "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.LibType"
                },
                "local_party_id": {
                    "description": "local party id",
                    "type": "string"
                },
                "name": {
                    "description": "name of the vault",
                    "type": "string"
                },
                "old_parties": {
                    "description": "old parties",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "old_reshare_prefix": {
                    "type": "string"
                },
                "public_key": {
                    "description": "public key ecdsa",
                    "type": "string"
                },
                "reshare_type": {
                    "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.ReshareType"
                },
                "session_id": {
                    "description": "session id",
                    "type": "string"
                }
            }
        },
        "github_com_vultisig_vultiserver_internal_types.ReshareType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Normal",
                "Plugin"
            ]
        },
        "github_com_vultisig_vultiserver_internal_types.VaultCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "encryption_password",
                "hex_chain_code",
                "hex_encryption_key",
                "name",
                "session_id"
            ],
            "properties": {
                "email": {
                    "description": "this is the email of the user that the vault backup will be sent to",
                    "type": "string"
                },
                "encryption_password": {
                    "description": "password used to encrypt the vault file",
                    "type": "string"
                },
                "hex_chain_code": {
                    "type": "string"
                },
                "hex_encryption_key": {
                    "description": "this is the key used to encrypt and decrypt the keygen communications",
                    "type": "string"
                },
                "lib_type": {
                    "description": "this is the type of the vault",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_vultisig_vultiserver_internal_types.LibType"
                        }
                    ]
                },
                "local_party_id": {
                    "description": "when this field is empty , then server will generate a random local party id",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "github_com_vultisig_vultiserver_internal_types.VaultGetResponse": {
            "type": "object",
            "properties": {
                "hex_chain_code": {
                    "type": "string"
                },
                "local_party_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public_key_ecdsa": {
                    "type": "string"
                },
                "public_key_eddsa": {
                    "type": "string"
                }
            }
        },
        "github_com_vultisig_vultiserver_internal_types.VaultResendRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "public_key_ecdsa": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "XPassword": {
            "type": "apiKey",
            "name": "x-password",
            "in": "header"
        }
    }
}